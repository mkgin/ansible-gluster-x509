---
# create_local_test_ca.yml to be include in ca tests
#
# - creates a directory structure for a test CA in tmp or a configured path
# - creates a self signed CA in this directory
# - if a location for installing certificate in unset, makes a temporary location for that
# - creates minimal files needed for functioning openssl CA
# - creates key, cert req and cert... 
# 
# - creates a tmp space for host certificates if gluster_x509_certificate_path is not set
#
# The typically these tasks are run only on localhost... ( the one that runs ansible)
# 
# The test should be able to sign certificates on a local and remote host

- name: create CA directory structure in configured path
  file: path={{item}} state=directory
  with_items:
    - "{{gluster_x509_local_ca_path}}/requests"
    - "{{gluster_x509_local_ca_path}}/private"
    - "{{gluster_x509_local_ca_path}}/newcerts"
  when: gluster_x509_local_ca_path is defined or gluster_x509_local_ca_path != ''

- name: create CA directory structure in temporary location
  tempfile:
    state: directory
    suffix: test_ca
  register: test_ca_dir
  when: gluster_x509_local_ca_path is not set or gluster_x509_local_ca_path == ''

- name: set CA path to temporary location
  set_fact:
    gluster_x509_local_ca_path: "{{ test_ca_dir.path }}"
  when: gluster_x509_local_ca_path is not set or gluster_x509_local_ca_path == ''

- name: touch index.txt and index.txt.attr
  file:
    path: "{{item}}"
    state: touch
  with_items:
    - "{{gluster_x509_local_ca_path}}/index.txt"
    - "{{gluster_x509_local_ca_path}}/index.txt.attr"

- name: make minimal openssl.cnf for test CA 
  tasks:
    # CA
    - shell: "echo \"[ ca ]\" >  {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"default_ca      = CA_default \" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"[ CA_default ]\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"dir = {{ gluster_x509_local_ca_path }}/\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"private_key  = \\$dir/private/cakey.pem\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"certificate  = \\$dir/cacert.pem\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"new_certs_dir   = \\$dir/newcerts\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"database       = \\$dir/index.txt\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"default_md      = default\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"policy          = policy_anything\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"serial          = \\$dir/serial\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"default_days    = 365\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"unique_subject = no\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    # req
    - shell: "echo \"[ req ]\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"distinguished_name      = req_distinguished_name\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"[ req_distinguished_name ]\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"commonName                      = Common Name\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"commonName_max                  = 64\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    # policy 
    - shell: "echo \"[ policy_anything ]\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"commonName              = supplied\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
    - shell: "echo \"\" >> {{ gluster_x509_local_ca_path }}/openssl.cnf"
  creates: "{{ gluster_x509_local_ca_path }}/openssl.cnf"

- name: make the CA key
  command: "openssl genrsa -out {{ gluster_x509_local_ca_path }}/private/cakey.pem -passout pass:{{ gluster_x509_local_ca_passphrase }}  2048"
  args:
    creates: "{{ gluster_x509_local_ca_path }}/private/cakey.pem"
  no_log: "{{ gluster_x509_no_log_passwords | bool }}"
  # let's not overwrite a key  

- name: make the CA certificate request
  command: "openssl req {{ gluster_x509_local_ca_config_option }} -new -sha256 -subj \"{{ gluster_x509_local_test_CA_CN }}\" -key {{gluster_x509_local_ca_path}}/private/cakey.pem -out {{gluster_x509_local_ca_path}}/ca_key.csr"
  # no big deal if csr is overwritten

- name: make self signed CA certificate 
  command: "openssl x509  -req -CAcreateserial -CAserial {{ gluster_x509_local_ca_path }}/serial -sha256 -signkey {{ gluster_x509_local_ca_path }}/private/cakey.pem -days 600 -passin pass:{{ gluster_x509_local_ca_passphrase }} -in {{ gluster_x509_local_ca_path }}/ca_key.csr -out {{ gluster_x509_local_ca_path }}/cacert.pem" 
  args:
    creates: "{{ gluster_x509_local_ca_path }}/cacert.pem"
    # let's not overwrite a cert
  no_log: "{{ gluster_x509_no_log_passwords | bool }}"

# this part sould be another tasks file
# that would be overkill for a local test.
# but necessary if a tmp dir is wanted for remote tests
- name: make tmp dir to test installing certificates in simulated local etcssl under tmp/ansible.something
  tempfile:
    state: directory
    suffix: etcssl
  register: etcssl_dir
  when: gluster_x509_certificate_path is not set or gluster_x509_certificate_path == ''

- name: set gluster_x509_certificate_path if it is not set
  set_fact:
    gluster_x509_certificate_path: "{{ etcssl_dir.path }}"
  when: gluster_x509_certificate_path is not set or gluster_x509_certificate_path == ''
